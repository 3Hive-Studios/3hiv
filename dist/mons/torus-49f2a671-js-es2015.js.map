{"version":3,"sources":["./node_modules/bnc-onboard/dist/esm/torus-49f2a671.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAA4E,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,4CAA4C,EAAE;;AAEvQ,gCAAgC,qBAAqB,mCAAmC,gDAAgD,gCAAgC,wBAAwB,wEAAwE,EAAE,uBAAuB,uEAAuE,EAAE,kBAAkB,EAAE,EAAE,GAAG;;AAE9V;AACoB;AACnC;AACL;AACD;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qNAAgC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,0BAA0B,8DAAW;AACrC;AACA,2CAA2C,8DAAW;;AAEtD,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,2BAA2B;;AAE3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E","file":"torus-49f2a671-js-es2015.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'regenerator-runtime/runtime';\nimport { n as networkName } from './onboard-c11b1ecb.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nvar torusIcon = \"<svg width=\\\"257\\\" height=\\\"277\\\" viewBox=\\\"0 0 257 277\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<rect width=\\\"153.889\\\" height=\\\"82.0741\\\" fill=\\\"#0364FF\\\" />\\n<rect x=\\\"71.8135\\\" width=\\\"82.0741\\\" height=\\\"277\\\" fill=\\\"#0364FF\\\" />\\n<path d=\\\"M215.443 82.0741C238.107 82.0741 256.48 63.7012 256.48 41.037C256.48 18.3729 238.107 0 215.443 \\n0C192.779 0 174.406 18.3729 174.406 41.037C174.406 63.7012 192.779 82.0741 215.443 82.0741Z\\\" fill=\\\"#0364FF\\\" />\\n</svg>\";\n\nfunction torus(options) {\n  var networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg,\n      buttonPosition = options.buttonPosition,\n      modalZIndex = options.modalZIndex,\n      apiKey = options.apiKey,\n      buildEnv = options.buildEnv,\n      enableLogging = options.enableLogging,\n      enabledVerifiers = options.enabledVerifiers,\n      loginConfig = options.loginConfig,\n      showTorusButton = options.showTorusButton,\n      integrity = options.integrity,\n      whiteLabel = options.whiteLabel,\n      loginMethod = options.loginMethod;\n  return {\n    name: label || 'Torus',\n    svg: svg || torusIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$import, Torus, instance, provider;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return import('@toruslabs/torus-embed');\n\n              case 2:\n                _yield$import = _context3.sent;\n                Torus = _yield$import[\"default\"];\n                instance = new Torus({\n                  buttonPosition: buttonPosition,\n                  modalZIndex: modalZIndex,\n                  apiKey: apiKey\n                });\n                _context3.next = 7;\n                return instance.init({\n                  buildEnv: buildEnv,\n                  enableLogging: enableLogging,\n                  network: {\n                    host: networkName(networkId),\n                    chainId: networkId,\n                    networkName: \"\".concat(networkName(networkId), \" Network\") // default: Main Ethereum Network\n\n                  },\n                  showTorusButton: showTorusButton,\n                  enabledVerifiers: enabledVerifiers,\n                  loginConfig: loginConfig,\n                  integrity: integrity,\n                  whiteLabel: whiteLabel\n                });\n\n              case 7:\n                provider = instance.provider;\n                return _context3.abrupt(\"return\", {\n                  provider: provider,\n                  instance: instance,\n                  \"interface\": {\n                    name: 'Torus',\n                    connect: function () {\n                      var _connect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                        var result;\n                        return regeneratorRuntime.wrap(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                _context.next = 2;\n                                return instance.login({\n                                  verifier: loginMethod\n                                });\n\n                              case 2:\n                                result = _context.sent;\n                                return _context.abrupt(\"return\", {\n                                  message: result[0]\n                                });\n\n                              case 4:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, _callee);\n                      }));\n\n                      function connect() {\n                        return _connect.apply(this, arguments);\n                      }\n\n                      return connect;\n                    }(),\n                    disconnect: function disconnect() {\n                      return instance.cleanUp();\n                    },\n                    address: {\n                      get: function get() {\n                        return Promise.resolve(instance.web3.eth.accounts[0]);\n                      }\n                    },\n                    network: {\n                      get: function get() {\n                        return Promise.resolve(Number(instance.web3.version.network));\n                      }\n                    },\n                    balance: {\n                      get: function get() {\n                        return new Promise( /*#__PURE__*/function () {\n                          var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(resolve, reject) {\n                            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    instance.web3.eth.getBalance(instance.web3.eth.accounts[0], function (err, data) {\n                                      if (err) {\n                                        reject(\"Error while checking Balance: \".concat(err));\n                                      } else {\n                                        resolve(data.toString(10));\n                                      }\n                                    });\n\n                                  case 1:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, _callee2);\n                          }));\n\n                          return function (_x, _x2) {\n                            return _ref.apply(this, arguments);\n                          };\n                        }());\n                      }\n                    },\n                    dashboard: function dashboard() {\n                      return instance.showWallet('home');\n                    }\n                  }\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function wallet() {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    mobile: true,\n    preferred: preferred\n  };\n}\n\nexport default torus;"],"sourceRoot":"webpack:///"}